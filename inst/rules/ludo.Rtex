%% begin.rcode opts, echo=FALSE
set_knitr_opts(game, output_ext, wd)
cfg <- gk$get_piecepacks(1)[[1]]
pieces <- IncludePieces$new(cfg, output_ext)
%% end.rcode

\subsection{Description}

The family friendly \emph{Ludo} is a 19th century derivative of the 6th century Indian race game \emph{Pachisi}.

\subsection{Objective}

Race all your coins around the track to \emph{home} before your opponents get all of their coins \emph{home}.

\subsection{Setup}

Take eight non-ace tiles and and place them face down as in Figure \ref{fig:ludo-starting-diagram}.  Each of these tiles has nine ``points" that coins may be placed on.  Each player picks a suit and grabs their ``ace" tile, four coins (``suit" side up), their die, and their pawn and places them as in Figure \ref{fig:ludo-starting-diagram}.\footnote{If there are less than four players then the pieces for the non-chosen suits need not be set up.  If exactly two players are playing then they should place their suits on opposite sides of each other on the track.}  Each face up ``ace" tile is the player's \emph{staging tile} where their four coins start out (and may return to upon capture).  The nearest ``point" to the \emph{staging tile} is that player's \emph{starting point} where coins will be entered into play.  The middle of the board represents the \emph{home} where they aim to move the rest of their coins to.  The pawns serve as a reminder of the player's \emph{home column}: the five ``points" leading up to the \emph{home} where their opponents can't enter.

%% begin.rcode starting-diagram, fig.width=17.6, fig.height=17.6, out.width="0.9\\linewidth", out.height="0.9\\linewidth", fig.cap="Setup for a game of Ludo"
cfg <- gk$get_piecepacks(1)[[1]]
pushViewport(viewport(width=inch(15), height=inch(15)))
pmap_piece(df_ludo(), cfg=cfg, default.units="in")
popViewport()
%% end.rcode

%% begin.rcode moon-route, fig.width=17.6, fig.height=17.6, out.width="0.9\\linewidth", out.height="0.9\\linewidth", fig.cap="The Moons player's route from their \\emph{starting point} to their \\emph{home}.  The square nearest Moons' \\emph{staging tile} is Moons' \\emph{starting point}, the triangle in the middle is Moons' \\emph{home}, and the five squares leading up to it is Moons' \\emph{home column}."
pushViewport(viewport(width=inch(15), height=inch(15)))
pmap_piece(df_ludo(), cfg=cfg, default.units="in")
gp <- gpar(lex=18, col = cfg$annotation_color)
grid.segments(x0 = c(10, 15, 9, 6, 1, 7), 
              y0 = c(9, 7, 1, 7, 9, 15),
              x1 = c(15, 10, 7, 1, 6, 8), 
              y1 = c(9, 7, 1, 7, 9, 15),
              default.units="in", gp=gp)
grid.segments(x0 = c(9, 15, 9, 7, 1, 7, 8),
              y0 = c(14, 9, 6, 1, 7, 10, 15),
              x1 = c(9, 15, 9, 7, 1, 7, 8),
              y1 = c(10, 7, 1, 6, 9, 15, 9),
              default.units="in", gp=gp)
grid.curve(x1 = c(9, 10, 7, 6), x2 = c(10, 9, 6, 7),
           y1 = c(10, 7, 6, 9), y2 = c(9, 6, 7, 10),
           default.units = "in", gp = gp)
# grid.curve(x1 = 9, x2 = 10, y1 = 10, y2 = 9, default.units = "in", gp = gp)
gp <- gpar(col = NA, fill = cfg$annotation_color)
radius <- 0.32
grid.circle(x = rep.int(c(9, 15, 9, 7, 1, 7, 8),
                        c(4, 1, 6, 6, 1, 6, 1)),
            y = c(13:10, 8, 1:6, 1:6, 8, 15:10, 15),
            r = radius, default.units = "in", gp = gp)
grid.circle(x = c(10:15, 10:15, 8, 1:6, 1:6),
            y = rep.int(c(9, 7, 1, 7, 9),
                        c(6, 6, 1, 6, 6)),
            r = radius, default.units = "in", gp = gp)
grid.rect(x = rep.int(c(9, 8),
                        c(1, 5)),
            y = c(14, 14:10),
            width = 2 * radius, height = 2 * radius,
            default.units = "in", gp = gp)
grid.polygon(x = c(8 - 1.5 * radius, 8 + 1.5 * radius, 8),
             y = c(9 + 1.5 * radius, 9 + 1.5 * radius, 9 - 1.5 * radius),
             default.units = "in", gp = gp)
popViewport()
%% end.rcode

\subsection{The Order of Play}

Each player rolls a die to see who goes first.  After the first player moves then play proceeds in clockwise order.  For each move the player rolls their die and (possibly) makes a move.

\subsection{Moves, Entering, Hitting, and Blocking}
\begin{itemize}
\item An ace die roll equals one and null equals six.
\item Players enter their coins from their \emph{staging tile} onto their \emph{starting point} and move them clockwise around the track and then through their \emph{home column} to finally reach their \emph{home}.  See Figure \ref{fig:ludo-moon-route} for the Moons player's route.
\item Per die roll a player may either enter a coin from their \emph{staging tile} into play at their \emph{starting point} or alternatively move an already ``in play" coin.  
\item For a given die roll it may not be possible to make a legal move and in such case play will skip to the next die roll.\footnote{If they rolled a null the same player may roll again.}:
\begin{itemize}
   \item Coins in the \emph{starting stage} cannot be entered if a null is not rolled or if the \emph{starting point} is ``blocked" by a stack of opponent coins.
   \item An ``in play" coin may be ``blocked" from making a move by a stack of opponent coins.
   \item One may roll too high to enter \emph{home}.
\end{itemize}
\item If a player has a legal move then they must make a legal move (of their choice).
\item A player's coins start the game on their \emph{staging tile}.  A coin in the \emph{staging tile} may not move until it has been \emph{entered} into play.  If a player rolls a null they may \emph{enter} a coin from their \emph{staging tile} into their \emph{starting point}.\footnote{Unless their \emph{starting point} is \emph{blocked} by multiple coins.}  It is now ``in play" and may move around the track.
\item An ``in play" coin must move exactly the number of points as the die roll.  If that final point has a single opponent's coin then that coin is ``hit" and the opponent's coin is returned to the opponent's \emph{staging tile}.\footnote{This coin must be ``entered" again from their \emph{staging tile} to their \emph{starting point} after the opponent rolls a null.}  If that final point has one (or more) of that player's coins then they stack and form a ``block".  Opponent coins may not land on or pass a ``block".
\item One must roll exactly to move a coin to \emph{home}.
\item Normally a player rolls their die once and (possibly) makes a move.  However if a player rolls a null then after they (possibly) make a move with the null they may roll the die a second time (and possibly make a second move).  If the second die roll is also a null then after they (possibly) make a move with the second null they roll the die a third time (and possibly make a third move).  However if this third die roll is a also null they do not get to make a third move (with the null) and their turn is over. 
\end{itemize}
